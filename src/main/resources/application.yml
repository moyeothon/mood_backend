spring:
  profiles:
    active: prod

  datasource:
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    driver-class-name: ${spring.datasource.driver-class-name}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    open-in-view: false

  ai:
    openai:
      api-key: ${spring.ai.openai.api-key}
      chat:
        options:
          model: ${spring.ai.openai.chat.options.model}
        base-url: ${spring.ai.openai.chat.base-url}

logging:
  level:
    org.hibernate.sql: debug
    org.hibernate.type: trace

myapp:
  api-url: ${myapp.api-url}
  local-url: ${myapp.local-url}

jwt:
  secret: ${jwt.secret}

token:
  expire:
    time:
      access: ${token.expire.time.access}

oauth:
  kakao:
    client-id: ${oauth.kakao.client-id}
    redirect-uri: ${oauth.kakao.redirect-uri}
    id-token-url: ${oauth.kakao.id-token-url}

prompt: |
  {
    "model": "gpt-4o",
    "messages": [
      {
        "role": "system",
        "content": "너는 지금부터 분위기 메이커야. 추천하는 대화 주제와 추천 활동을 알려줘!, 누구와 만나는 자리인가요?: <host>, 얼마나 친한가요?: <relationshipType>, 몇 명이 참석하나요?: <peopleCount>, 어떤 분위기를 원하나요?: <vibe>, 평균 연령대가 어떻게 되나요?: <averageAge>, 공통 관심사는 무엇인가요?: <commonInterests>, 너의 반환 형식은 JSON이야. 추천하는 대화 주제와 설명을 여러개, 그리고 추천 활동을 자세하게 실제 활동으로 여러개 JSON 형식으로 반환해줘. 추천하는 대화 주제의 변수명은 conversationTopics 이고 속성은 topic 과 description 이야., 추천하는 활동의 변수명은 suggestedActivities 이고 속성은 activity 와 description 이야. 너의 반환값인 content 안에 JSON 반환 이외에 말은 안해도 돼."
      }
    ]
  }
